[{"C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\index.js":"1","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\App.js":"2","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\reportWebVitals.js":"3","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Article\\Index.js":"4","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Article\\useArticle.js":"5","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Article\\Show.js":"6","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Search\\Search.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":649,"mtime":1611982915510,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2107,"mtime":1613392184938,"results":"12","hashOfConfig":"9"},{"size":912,"mtime":1608358281403,"results":"13","hashOfConfig":"9"},{"size":1116,"mtime":1613385619596,"results":"14","hashOfConfig":"9"},{"size":2550,"mtime":1613392232104,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18gp3hd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\index.js",[],["34","35"],"C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\App.js",[],"C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\reportWebVitals.js",[],"C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Article\\Index.js",["36","37","38"],"import React,{useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport useArticle from './useArticle';\r\nimport Search from '../Search/Search';\r\n\r\nconst Index=()=>{\r\n  const {articles,fetchArticles} = useArticle();\r\n  const { search, inSearch, parceParam, filter } = Search();\r\n  const SearchForm = Search().generateForm;\r\n\r\n  useEffect(()=>{\r\n    fetchArticles();\r\n  },[search]);\r\n\r\n  const findTagId=(tags,id)=>{\r\n    for(let tag of tags){\r\n       if(tag.id===id)return true;\r\n     };\r\n     return false;\r\n   }\r\n   \r\n  const displayArticleNode=(article)=>{\r\n    return (\r\n      <li key={article.id}>\r\n        {\r\n          article.visual?(\r\n            <Link to={`/article/${article.id}`}>\r\n              <img src={article.visual?.url} alt=\"kv\"/>\r\n            </Link>):\"\"\r\n        }\r\n        <Link to={`/article/${article.id}`}>\r\n          <h3>{article.title}</h3>\r\n        </Link>\r\n        <time>{article.createdAt}</time>\r\n        <p>{article.content}</p>\r\n        <ul>\r\n        {\r\n          article.tags.map(tag=>(\r\n            <li key={tag.id}>\r\n              <Link to={ { pathname:`/article?tag=${tag.id}`} }>\r\n                <span className=\"tag\">{tag.name}</span>\r\n              </Link>\r\n            </li>\r\n          ))\r\n        }\r\n        </ul>\r\n        <hr/>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <>\r\n    <button onClick={()=>console.log(search)}> console.log(search) </button>\r\n    <button onClick={()=>console.log(search.tag.length)}> console.log(search.tag.length) </button>\r\n    <button onClick={()=>parceParam()}> parceParam() </button>\r\n    <button onClick={()=>console.log(inSearch())}> inSearch() </button>\r\n      <h2>Articles</h2>\r\n      <SearchForm />\r\n      {/* <search.generateForm /> */}\r\n      <ul>\r\n        {\r\n          articles.map(article => {\r\n            if(inSearch()){\r\n              if(filter(article)){\r\n                return displayArticleNode(article);\r\n              };\r\n            }else{\r\n              return displayArticleNode(article);\r\n            }\r\n          }).filter(x => x)\r\n        }\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\nexport default Index;","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Article\\useArticle.js",[],"C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Article\\Show.js",["39","40"],"import React,{useEffect} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport useArticle from './useArticle';\r\n\r\nconst Show=()=>{\r\n  const {id}=useParams();\r\n  const {article,fetchArticle}=useArticle();\r\n\r\n  useEffect(()=>{\r\n    fetchArticle(id);\r\n  },[]);\r\n  \r\n  return(\r\n    <>\r\n      <Link to={`/article`}>\r\n          back\r\n        </Link>\r\n      {article?(<>\r\n        {\r\n          article.visual?(\r\n            <img src={article.visual?.url} alt=\"kv\"/>\r\n          ):\"\"\r\n        }\r\n        <Link to={`/article/${article.id}`}>\r\n          <h3>{article.title}</h3>\r\n        </Link>\r\n        <time>{article.createdAt}</time>\r\n        <p>{article.content}</p>\r\n        <ul>\r\n        {\r\n          article.tags?article.tags.map(tag=>(\r\n            <li key={tag.id}>\r\n              <Link to={ { pathname:`/article?tag=${tag.id}`} }>\r\n                <span className=\"tag\">{tag.name}</span>\r\n              </Link>\r\n            </li>\r\n          )):\"\"\r\n        }\r\n        </ul>\r\n      </>):<p>Not Found</p>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Show;","C:\\Users\\cirno\\works\\react\\react-kymr-blog\\src\\Search\\Search.js",["41","42","43","44"],"import {useState, useEffect} from 'react';\r\nimport {Link,useLocation} from 'react-router-dom';\r\n\r\nconst Search=()=>{\r\n  const [search,setSearch] = useState({tag:[],keyword:[]});\r\n  const q = useLocation();\r\n\r\n  useEffect(()=>{\r\n    parceParam();\r\n  },[q]);\r\n\r\n  const exceptItemById=(target,id)=>{\r\n    return target.map(e=>{if(e.id !== id)return e;}).fillter(e=>e);\r\n  }\r\n  const filter = (target)=>{\r\n    let tagFlag=false,keywordFlag=false;\r\n    if(search.tag.length>0){\r\n      for(let i=0;i<target.tags.length;i++){\r\n        for(let j=0;j<search.tag.length;j++){\r\n          if(target.tags[i].id===search.tag[j]){\r\n            tagFlag = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }else{\r\n      tagFlag = true;\r\n    }\r\n    if(search.keyword.length>0){\r\n      console.log(target.title)\r\n      for(let j=0;j<search.keyword.length;j++){\r\n        if(target.title.indexOf(search.keyword[j])!=-1){\r\n          keywordFlag = true;\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      keywordFlag = true;\r\n    }\r\n    return tagFlag&&keywordFlag;\r\n  }\r\n  const parceParam = ()=>{\r\n    let query = q.pathname;\r\n    let params = {tag:[],keyword:[]};\r\n    //urlパラメータをオブジェクトにまとめる\r\n    query.substring(query.indexOf('?')+1).split('&').forEach( param => {\r\n      const temp = param.split('=')\r\n      //pramsオブジェクトにパラメータを追加\r\n      params = {\r\n        ...params,\r\n        [temp[0]]: temp[1]\r\n      }\r\n    });\r\n    let searchParam = {tag:[],keyword:[]};\r\n    if(params.tag&&params.tag.length > 0)searchParam.tag=params.tag.split(',');\r\n    if(params.keyword&&params.keyword.length > 0)searchParam.keyword=params.keyword.split(',');\r\n    setSearch(searchParam);\r\n  }\r\n  const inSearch=()=>{\r\n    return (search.tag.length>0)?true:false;\r\n  }\r\n  const createSerachParamString = ()=>{\r\n    let param;\r\n    if(search.tag)param+=search.tag.join()+'&';\r\n    if(search.keyword)param+=search.keyword.join()+'&';\r\n    return param;\r\n  }\r\n\r\n  const generateForm=()=>{\r\n    return(\r\n      <>\r\n        <p>search</p>\r\n        <input type=\"text\"></input>\r\n        { inSearch() ? (\r\n          search.tag.map(tag=>(\r\n            <p key={tag.id}>\r\n              <span>search:{tag.name} </span>\r\n              <Link to={`/article`}>\r\n                return\r\n              </Link>\r\n            </p>\r\n          ))\r\n          ):\"\"\r\n        }\r\n      </>\r\n    );\r\n  }\r\n  return{\r\n    search,\r\n    generateForm,\r\n    inSearch,\r\n    filter,\r\n    createSerachParamString\r\n  }\r\n}\r\n\r\nexport default Search;",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":13,"column":5,"nodeType":"51","endLine":13,"endColumn":13,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":15,"column":9,"nodeType":"55","messageId":"56","endLine":15,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":63,"column":32,"nodeType":"59","messageId":"60","endLine":63,"endColumn":34},{"ruleId":"53","severity":1,"message":"61","line":2,"column":9,"nodeType":"55","messageId":"56","endLine":2,"endColumn":19},{"ruleId":"49","severity":1,"message":"62","line":12,"column":5,"nodeType":"51","endLine":12,"endColumn":7,"suggestions":"63"},{"ruleId":"49","severity":1,"message":"64","line":10,"column":5,"nodeType":"51","endLine":10,"endColumn":8,"suggestions":"65"},{"ruleId":"53","severity":1,"message":"66","line":12,"column":9,"nodeType":"55","messageId":"56","endLine":12,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":13,"column":24,"nodeType":"59","messageId":"60","endLine":13,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":32,"column":51,"nodeType":"69","messageId":"70","endLine":32,"endColumn":53},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchArticles'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-unused-vars","'findTagId' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchArticle' and 'id'. Either include them or remove the dependency array.",["74"],"React Hook useEffect has a missing dependency: 'parceParam'. Either include it or remove the dependency array.",["75"],"'exceptItemById' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [fetchArticles, search]",{"range":"82","text":"83"},"Update the dependencies array to be: [fetchArticle, id]",{"range":"84","text":"85"},"Update the dependencies array to be: [parceParam, q]",{"range":"86","text":"87"},[385,393],"[fetchArticles, search]",[318,320],"[fetchArticle, id]",[251,254],"[parceParam, q]"]